#!/usr/bin/env zsh
# Quick fix script for immediate terminal error resolution

echo "🔧 QuickSaveAlias Emergency Fix for macOS"
echo "========================================="
echo ""

# Backup current broken files
echo "1️⃣  Creating backups..."
[ -f ~/.zsh-aliases ] && cp ~/.zsh-aliases ~/.zsh-aliases.broken-backup
[ -f ~/.quicksavealias.sh ] && cp ~/.quicksavealias.sh ~/.quicksavealias.sh.old-backup
echo "   ✓ Backups created"
echo ""

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Install fixed versions
echo "2️⃣  Installing fixed versions..."
cp "$SCRIPT_DIR/quicksavealias_mac.sh" ~/.quicksavealias.sh
cp "$SCRIPT_DIR/zsh_special_aliases.sh" ~/.zsh_special_aliases.sh
chmod +x ~/.quicksavealias.sh ~/.zsh_special_aliases.sh
echo "   ✓ Fixed scripts installed"
echo ""

# Fix the aliases file
echo "3️⃣  Repairing aliases file..."
if [ -f ~/.zsh-aliases.broken-backup ]; then
    # Create a clean version
    echo "# Zsh aliases file - auto-generated by QuickSaveAlias" > ~/.zsh-aliases
    echo "# Special character aliases are managed in ~/.zsh_special_aliases.sh" >> ~/.zsh-aliases
    echo "" >> ~/.zsh-aliases
    
    # Process the backup and add proper formatting
    while IFS= read -r line; do
        # Skip empty lines and comments
        [[ -z "$line" || "$line" == \#* ]] && continue
        
        # Extract alias name (handle both "alias name=..." and "name=..." formats)
        local alias_name=$(echo "$line" | sed -E 's/^(alias )?([^=]+)=.*/\2/' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
        
        # Skip special character aliases - they're managed by the helper
        [[ "$alias_name" =~ ^[0-9]+$ ]] && continue  # Numbers: 1, 2, 3, etc
        [[ "$alias_name" == "-" ]] && continue        # Dash
        [[ "$alias_name" =~ ^\.+$ ]] && continue     # Dots: ..., ...., etc
        [[ "$alias_name" == "_" ]] && continue        # Underscore
        
        # Skip aliases with special characters that cause issues
        [[ "$alias_name" == *"!"* ]] && continue      # Exclamation marks
        [[ "$alias_name" == *"-"* ]] && continue      # Dashes in names
        
        # Skip read-only variables
        [[ "$alias_name" == "history" ]] && continue
        
        # Add proper alias prefix if missing
        if [[ "$line" == alias* ]]; then
            echo "$line" >> ~/.zsh-aliases
        elif [[ "$line" == *=* ]]; then
            echo "alias $line" >> ~/.zsh-aliases
        fi
    done < ~/.zsh-aliases.broken-backup
    
    echo "   ✓ Aliases file repaired"
else
    echo "   ℹ  No broken aliases to repair"
fi
echo ""

# Update .zshrc if needed
echo "4️⃣  Checking .zshrc configuration..."
UPDATED=false

if ! grep -q "quicksavealias.sh -install" ~/.zshrc 2>/dev/null; then
    echo "" >> ~/.zshrc
    echo "# Install QuickSaveAlias for the session" >> ~/.zshrc
    echo "[ -e ~/.quicksavealias.sh ] && source ~/.quicksavealias.sh -install" >> ~/.zshrc
    UPDATED=true
fi

# Remove old direct sourcing
if grep -q "source ~/.zsh-aliases" ~/.zshrc 2>/dev/null; then
    sed -i '' '/^[^#]*source ~\/.zsh-aliases/d' ~/.zshrc
    UPDATED=true
fi

if ! grep -q "source ~/.zsh_special_aliases.sh" ~/.zshrc 2>/dev/null; then
    echo "" >> ~/.zshrc
    echo "# Load all aliases including special character aliases" >> ~/.zshrc
    echo "[ -f ~/.zsh_special_aliases.sh ] && source ~/.zsh_special_aliases.sh" >> ~/.zshrc
    UPDATED=true
fi

if [ "$UPDATED" = true ]; then
    echo "   ✓ .zshrc updated"
else
    echo "   ✓ .zshrc already configured"
fi
echo ""

echo "========================================="
echo "✅ FIX COMPLETE!"
echo ""
echo "Your backups:"
echo "  • ~/.zsh-aliases.broken-backup"
echo "  • ~/.quicksavealias.sh.old-backup"
echo ""
echo "Next step: Restart your terminal or run:"
echo "  source ~/.zshrc"
echo ""
echo "Test it works:"
echo "  adal test 'echo works'"
echo "  test"
echo ""

